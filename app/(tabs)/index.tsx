import React, { useState } from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  TextInput,
  Alert,
  ScrollView,
  KeyboardAvoidingView,
  Platform,
} from 'react-native';
import MapView, { Marker } from 'react-native-maps';
import Animated, {
  useSharedValue,
  withTiming,
  useAnimatedStyle,
  Easing,
} from 'react-native-reanimated';
import { useRouter } from 'expo-router';

const presetLocations = {
  work: { name: '–†–∞–±–æ—Ç–∞: –ö–æ–∑–ª–æ–¥—É–π 25–ê', latitude: 43.6684, longitude: 23.6015 },
  home: { name: '–î–æ–º: –°–∞—Ç–æ–≤—á–∞ —É–ª. –ê–ª–µ–∫—Å–∞–Ω–¥—ä—Ä –°—Ç–∞–º–±–æ–ª–∏–π—Å–∫–∏ 7', latitude: 41.6292, longitude: 23.1096 },
  frequent: { name: '–ß–µ—Å—Ç–æ –ø–æ—Å–µ—â–∞–≤–∞–Ω–æ: –õ—é–ª–∏–Ω 9, –±–ª–æ–∫ 409 –≤—Ö–æ–¥ –ì', latitude: 42.6724, longitude: 23.2702 },
  bansko: { name: '–ë–∞–Ω—Å–∫–æ', latitude: 41.8372, longitude: 23.4883 },
  pernik: { name: '–ü–µ—Ä–Ω–∏–∫', latitude: 42.6050, longitude: 23.0389 },
};

export default function HomeScreen() {
  const router = useRouter();

  // –ê–Ω–∏–º–∞—Ü–∏—è –±—É—Ç–æ–Ω
  const scale = useSharedValue(1);
  const animatedStyle = useAnimatedStyle(() => ({
    transform: [{ scale: scale.value }],
  }));
  const onPressIn = () => {
    scale.value = withTiming(0.9, { duration: 100, easing: Easing.out(Easing.ease) });
  };
  const onPressOut = () => {
    scale.value = withTiming(1, { duration: 100, easing: Easing.out(Easing.ease) });
  };

  // –ù–∞—á–∞–ª–Ω–∞ –∏ –∫—Ä–∞–π–Ω–∞ —Ç–æ—á–∫–∞
  const [startLocation, setStartLocation] = useState(presetLocations.bansko.name);
  const [destination, setDestination] = useState(presetLocations.pernik.name);

  // –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –ø—ä—Ç—É–≤–∞–Ω–µ
  const startTravel = () => {
    if (!startLocation.trim() || !destination.trim()) {
      Alert.alert('–ì—Ä–µ—à–∫–∞', '–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –Ω–∞—á–∞–ª–Ω–∞ –∏ –∫—Ä–∞–π–Ω–∞ —Ç–æ—á–∫–∞.');
      return;
    }
    router.push({
      pathname: '/(tabs)/navigate',
      params: { start: startLocation, end: destination },
    });
  };

  // –§—É–Ω–∫—Ü–∏—è –∑–∞ –∏–∑–±–æ—Ä –Ω–∞ preset –ª–æ–∫–∞—Ü–∏—è
  const setPresetLocation = (type: 'start' | 'destination', locName: string) => {
    if (type === 'start') setStartLocation(locName);
    else setDestination(locName);
  };

  // –ó–∞ –∫–∞—Ä—Ç–∞ ‚Äì –≤–∑–∏–º–∞–º–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏—Ç–µ –Ω–∞ –∏–∑–±—Ä–∞–Ω–∏—Ç–µ –ª–æ–∫–∞—Ü–∏–∏
  const getCoordsByName = (name: string) => {
    const loc = Object.values(presetLocations).find((l) => l.name === name);
    return loc ? { latitude: loc.latitude, longitude: loc.longitude } : null;
  };

  return (
    <KeyboardAvoidingView
      style={{ flex: 1, backgroundColor: '#0A84FF' }}
      behavior={Platform.OS === 'ios' ? 'padding' : undefined}
    >
      <ScrollView contentContainerStyle={styles.container} keyboardShouldPersistTaps="handled">
        <Text style={styles.mainTitle}>–î–æ–±—Ä–µ –¥–æ—à—ä–ª –≤ AutoWaze</Text>
        <Text style={styles.subtitle}>–ò–∑–±–µ—Ä–∏ –Ω–∞—á–∞–ª–Ω–∞ –∏ –∫—Ä–∞–π–Ω–∞ —Ç–æ—á–∫–∞ –∑–∞ —Ç–≤–æ–µ—Ç–æ –ø—ä—Ç—É–≤–∞–Ω–µ</Text>

        <View style={styles.mapContainer}>
          <MapView
            style={styles.map}
            initialRegion={{
              latitude: 42.1,
              longitude: 23.2,
              latitudeDelta: 1.5,
              longitudeDelta: 1.5,
            }}
          >
            {getCoordsByName(startLocation) && (
              <Marker
                coordinate={getCoordsByName(startLocation)!}
                title="–ù–∞—á–∞–ª–æ"
                description={startLocation}
                pinColor="green"
              />
            )}
            {getCoordsByName(destination) && (
              <Marker
                coordinate={getCoordsByName(destination)!}
                title="–ö—Ä–∞–π"
                description={destination}
                pinColor="red"
              />
            )}
          </MapView>
        </View>

        <Text style={styles.sectionTitle}>–ù–∞—á–∞–ª–Ω–∞ —Ç–æ—á–∫–∞</Text>
        <View style={styles.presetContainer}>
          {Object.values(presetLocations).map((loc) => (
            <TouchableOpacity
              key={'start-' + loc.name}
              style={[
                styles.presetButton,
                startLocation === loc.name && styles.presetButtonSelected,
              ]}
              onPress={() => setPresetLocation('start', loc.name)}
            >
              <Text
                style={[
                  styles.presetText,
                  startLocation === loc.name && styles.presetTextSelected,
                ]}
              >
                {loc.name}
              </Text>
            </TouchableOpacity>
          ))}
        </View>
        <TextInput
          style={styles.input}
          placeholder="–í—ä–≤–µ–¥–∏ –Ω–∞—á–∞–ª–Ω–∞ —Ç–æ—á–∫–∞"
          value={startLocation}
          onChangeText={setStartLocation}
        />

        <Text style={styles.sectionTitle}>–î–µ—Å—Ç–∏–Ω–∞—Ü–∏—è</Text>
        <View style={styles.presetContainer}>
          {Object.values(presetLocations).map((loc) => (
            <TouchableOpacity
              key={'dest-' + loc.name}
              style={[
                styles.presetButton,
                destination === loc.name && styles.presetButtonSelected,
              ]}
              onPress={() => setPresetLocation('destination', loc.name)}
            >
              <Text
                style={[
                  styles.presetText,
                  destination === loc.name && styles.presetTextSelected,
                ]}
              >
                {loc.name}
              </Text>
            </TouchableOpacity>
          ))}
        </View>
        <TextInput
          style={styles.input}
          placeholder="–í—ä–≤–µ–¥–∏ –¥–µ—Å—Ç–∏–Ω–∞—Ü–∏—è"
          value={destination}
          onChangeText={setDestination}
        />

        <Animated.View style={[styles.carButtonContainer, animatedStyle]}>
          <TouchableOpacity
            onPress={startTravel}
            onPressIn={onPressIn}
            onPressOut={onPressOut}
            style={styles.carButton}
            activeOpacity={0.8}
          >
            <Text style={styles.carButtonText}>üöó –ó–∞–ø–æ—á–Ω–∏ –ø—ä—Ç—É–≤–∞–Ω–µ—Ç–æ</Text>
          </TouchableOpacity>
        </Animated.View>
      </ScrollView>
    </KeyboardAvoidingView>
  );
}

const styles = StyleSheet.create({
  container: {
    paddingHorizontal: 20,
    paddingBottom: 40,
    paddingTop: 40,
  },
  mainTitle: {
    fontSize: 34,
    fontWeight: '700',
    color: '#fff',
    textAlign: 'center',
    marginBottom: 4,
  },
  subtitle: {
    fontSize: 18,
    fontWeight: '400',
    color: '#c0d8ff',
    textAlign: 'center',
    marginBottom: 20,
  },
  mapContainer: {
    height: 180,
    borderRadius: 15,
    overflow: 'hidden',
    marginBottom: 20,
    borderWidth: 2,
    borderColor: '#fff',
  },
  map: {
    flex: 1,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: '600',
    color: '#f0f4f8',
    marginBottom: 10,
    marginTop: 18,
  },
  presetContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginBottom: 16,
    justifyContent: 'center',
  },
  presetButton: {
    backgroundColor: '#145cd9',
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 25,
    margin: 6,
    minWidth: 130,
    alignItems: 'center',
  },
  presetButtonSelected: {
    backgroundColor: '#27ae60',
  },
  presetText: {
    color: '#c0d8ff',
    fontWeight: '600',
    fontSize: 13,
  },
  presetTextSelected: {
    color: '#fff',
    fontWeight: '700',
    textDecorationLine: 'underline',
  },
  input: {
    backgroundColor: '#fff',
    height: 48,
    borderRadius: 12,
    paddingHorizontal: 16,
    fontSize: 17,
    marginBottom: 10,
    borderWidth: 1,
    borderColor: '#145cd9',
    color: '#0A0A0A',
  },
  carButtonContainer: {
    alignItems: 'center',
    marginTop: 10,
  },
  carButton: {
    backgroundColor: '#fff',
    paddingVertical: 18,
    paddingHorizontal: 50,
    borderRadius: 50,
    shadowColor: '#000',
    shadowOpacity: 0.3,
    shadowRadius: 12,
    elevation: 8,
  },
  carButtonText: {
    color: '#0A84FF',
    fontSize: 22,
    fontWeight: '700',
  },
});

